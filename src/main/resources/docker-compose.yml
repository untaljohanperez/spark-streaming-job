---
version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
      #depends_on:
      #- grafana
    #- zookeeper2
    ports:
      - "12181:12181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_TICK_TIME: 10000

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    restart: unless-stopped
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
      - "9080:9080"
    volumes:
      - ./mount/jmx_exporter:/opt/jmx-exporter/
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:12181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:19092
      JMX_PORT: "9999"
  #      KAFKA_JMX_OPTS: "-javaagent:/opt/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=9080:/opt/jmx-exporter/kafka.yml -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"

  broker2:
    image: confluentinc/cp-kafka:latest
    hostname: broker2
    restart: unless-stopped
    container_name: broker2
    depends_on:
      - zookeeper
      - broker
    ports:
      - "19093:19093"
      - "9081:9081"
    volumes:
      - ./mount/jmx_exporter:/opt/jmx-exporter/
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:12181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:19093
      JMX_PORT: "9998"
      #      KAFKA_JMX_OPTS: "-javaagent:/opt/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=9081:/opt/jmx-exporter/kafka.yml -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"


  broker3:
    image: confluentinc/cp-kafka:latest
    hostname: broker3
    restart: unless-stopped
    container_name: broker3
    depends_on:
      - zookeeper
      - broker2
    ports:
      - "19094:19094"
      - "9082:9082"
    volumes:
      - ./mount/jmx_exporter:/opt/jmx-exporter/
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:12181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:19094
      JMX_PORT: "9997"
  #      KAFKA_JMX_OPTS: "-javaagent:/opt/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=9082:/opt/jmx-exporter/kafka.yml -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_DATA_DIR=/mongodb/data/db
      - MONGO_LOG_DIR=/mongodb/data/dev/null
      - MONGODB_USER="admin"
      - MONGODB_PASS="admin"
    volumes:
      - ./data:/mongodb/data
    ports:
      - 27017:27017
